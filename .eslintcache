[{"/Users/tajeshwar/Documents/courses/max/react-simple-forms/src/index.js":"1","/Users/tajeshwar/Documents/courses/max/react-simple-forms/src/App.js":"2","/Users/tajeshwar/Documents/courses/max/react-simple-forms/src/components/BasicForm.js":"3","/Users/tajeshwar/Documents/courses/max/react-simple-forms/src/hooks/use-input.js":"4"},{"size":142,"mtime":1616579686000,"results":"5","hashOfConfig":"6"},{"size":159,"mtime":1632725724107,"results":"7","hashOfConfig":"6"},{"size":3564,"mtime":1632726615012,"results":"8","hashOfConfig":"6"},{"size":1264,"mtime":1632730542687,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"k6rzpq",{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tajeshwar/Documents/courses/max/react-simple-forms/src/index.js",[],["20","21"],"/Users/tajeshwar/Documents/courses/max/react-simple-forms/src/App.js",[],"/Users/tajeshwar/Documents/courses/max/react-simple-forms/src/components/BasicForm.js",["22","23"],"import useInput from '../hooks/use-input'\n\nconst BasicForm = (props) => {\n  // First name\n  const {\n    value: enteredFirstName,\n    hasError: firstnameInputHasError,\n    valueChangeHandler: firstnameChangedHandler,\n    inputBlurHandler: firstnameBlurHandler,\n    isValid: enteredFirstNameIsValid,\n    reset: resetFirstNameInput,\n  } = useInput((value) => value.trim() !== '')\n\n  // Last name\n  const {\n    value: enteredLastName,\n    hasError: lastnameInputHasError,\n    valueChangeHandler: lastnameChangedHandler,\n    inputBlurHandler: lastnameBlurHandler,\n    isValid: enteredLastNameIsValid,\n    reset: resetLastNameInput,\n  } = useInput((value) => value.trim() !== '')\n\n  // Email validation\n  function ValidateEmail(inputText) {\n    let isValid = false\n    var mailformat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/\n    if (inputText.match(mailformat)) {\n      isValid = true\n    } else {\n      isValid = false\n    }\n    return isValid && inputText.trim() !== ''\n  }\n\n  // For email\n  const {\n    value: enteredEmail,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailChangedHandler,\n    inputBlurHandler: emailBlurHandler,\n    isValid: enteredEmailIsValid,\n    reset: resetEmailInput,\n  } = useInput(ValidateEmail)\n\n  let formIsValid = false\n\n  if (\n    enteredFirstNameIsValid &&\n    enteredLastNameIsValid &&\n    enteredEmailIsValid\n  ) {\n    formIsValid = true\n  }\n\n  const formSubmissionHandler = (e) => {\n    e.preventDefault()\n\n    if (\n      !enteredFirstNameIsValid ||\n      !enteredLastNameIsValid ||\n      !enteredEmailIsValid\n    ) {\n      return\n    }\n\n    resetFirstNameInput()\n    resetLastNameInput()\n    resetEmailInput()\n  }\n\n  const firstnameInputClasses = firstnameInputHasError\n    ? 'form-control invalid'\n    : 'form-control'\n\n  const lastnameInputClasses = firstnameInputHasError\n    ? 'form-control invalid'\n    : 'form-control'\n\n  const emailInputClasses = emailInputHasError\n    ? 'form-control invalid'\n    : 'form-control'\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={`control-group ${firstnameInputClasses}`}>\n        <div className='form-control'>\n          <label htmlFor='firstName'>First Name</label>\n          <input\n            type='text'\n            id='firstName'\n            onChange={firstnameChangedHandler}\n            onBlur={firstnameBlurHandler}\n            value={enteredFirstName}\n          />\n          {firstnameInputHasError && (\n            <p className='error-text'>Name must not be empty</p>\n          )}\n        </div>\n        <div className={`control-group ${lastnameInputClasses}`}>\n          <label htmlFor='lastName'>Last Name</label>\n          <input\n            type='text'\n            id='lastName'\n            onChange={lastnameChangedHandler}\n            onBlur={lastnameBlurHandler}\n            value={enteredLastName}\n          />\n          {lastnameInputHasError && (\n            <p className='error-text'>Name must not be empty</p>\n          )}\n        </div>\n      </div>\n      <div className={`control-group ${emailInputClasses}`}>\n        <label htmlFor='email'>E-Mail Address</label>\n        <input\n          type='email'\n          id='name'\n          onChange={emailChangedHandler}\n          onBlur={emailBlurHandler}\n          value={enteredEmail}\n        />\n        {emailInputHasError && (\n          <p className='error-text'>Please enter valid email.</p>\n        )}\n      </div>\n      <div className='form-actions'>\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  )\n}\n\nexport default BasicForm\n","/Users/tajeshwar/Documents/courses/max/react-simple-forms/src/hooks/use-input.js",[],{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","severity":1,"message":"29","line":27,"column":29,"nodeType":"30","messageId":"31","endLine":27,"endColumn":30,"suggestions":"32"},{"ruleId":"28","severity":1,"message":"29","line":27,"column":45,"nodeType":"30","messageId":"31","endLine":27,"endColumn":46,"suggestions":"33"},"no-native-reassign",["34"],"no-negated-in-lhs",["35"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["36","37"],["38","39"],"no-global-assign","no-unsafe-negation",{"messageId":"40","fix":"41","desc":"42"},{"messageId":"43","fix":"44","desc":"45"},{"messageId":"40","fix":"46","desc":"42"},{"messageId":"43","fix":"47","desc":"45"},"removeEscape",{"range":"48","text":"49"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"50","text":"51"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"52","text":"49"},{"range":"53","text":"51"},[787,788],"",[787,787],"\\",[803,804],[803,803]]